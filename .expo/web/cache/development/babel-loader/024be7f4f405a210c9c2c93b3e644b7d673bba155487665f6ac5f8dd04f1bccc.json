{"ast":null,"code":"var _jsxFileName = \"/Users/Felipe/Documents/app-vb/app-vb/src/screens/TaskListScreen.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Header, ListItem, CheckBox, FAB, Icon, Text } from 'react-native-elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0'\n  },\n  header: {\n    backgroundColor: 'rgb(0, 122, 255)',\n    paddingVertical: 20,\n    paddingHorizontal: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgb(242, 242, 242)'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  emptyView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  noTasksText: {\n    color: '#888'\n  },\n  taskText: {\n    color: '#333'\n  },\n  taskTextCompleted: {\n    textDecorationLine: 'line-through',\n    color: '#aaa',\n    fontStyle: 'italic'\n  }\n});\nconst TaskListScreen = ({\n  navigation,\n  tasks,\n  setTasks\n}) => {\n  const toggleTaskCompletion = id => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? Object.assign({}, task, {\n      completed: !task.completed\n    }) : task));\n  };\n  const renderTaskItem = ({\n    item\n  }) => _jsxDEV(ListItem, {\n    bottomDivider: true,\n    onPress: () => toggleTaskCompletion(item.id),\n    children: [_jsxDEV(CheckBox, {\n      checked: item.completed,\n      onPress: () => toggleTaskCompletion(item.id),\n      iconType: \"material-community\",\n      checkedIcon: \"checkbox-marked-circle\",\n      uncheckedIcon: \"checkbox-blank-circle-outline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), _jsxDEV(ListItem.Content, {\n      children: _jsxDEV(ListItem.Title, {\n        style: item.completed ? styles.taskTextCompleted : styles.taskText,\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), _jsxDEV(ListItem.Chevron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(Header, {\n      centerComponent: {\n        text: 'Minhas Tarefas',\n        style: styles.headerTitle\n      },\n      containerStyle: styles.header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? _jsxDEV(View, {\n      style: styles.emptyView,\n      children: _jsxDEV(Text, {\n        h4: true,\n        style: styles.noTasksText,\n        children: \"Nenhuma tarefa adicionada!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : _jsxDEV(FlatList, {\n      data: tasks,\n      keyExtractor: item => item.id.toString(),\n      renderItem: renderTaskItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), _jsxDEV(FAB, {\n      title: _jsxDEV(Icon, {\n        name: \"add\",\n        type: \"material\",\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }, this),\n      placement: \"right\",\n      color: \"#6200ee\",\n      onPress: () => navigation.navigate('AddTask')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\nexport default TaskListScreen;","map":{"version":3,"names":["React","StyleSheet","FlatList","SafeAreaView","View","Header","ListItem","CheckBox","FAB","Icon","Text","jsxDEV","_jsxDEV","styles","create","container","flex","backgroundColor","header","paddingVertical","paddingHorizontal","borderBottomWidth","borderBottomColor","headerTitle","color","fontSize","fontWeight","emptyView","justifyContent","alignItems","noTasksText","taskText","taskTextCompleted","textDecorationLine","fontStyle","TaskListScreen","navigation","tasks","setTasks","toggleTaskCompletion","id","prevTasks","map","task","Object","assign","completed","renderTaskItem","item","bottomDivider","onPress","children","checked","iconType","checkedIcon","uncheckedIcon","fileName","_jsxFileName","lineNumber","columnNumber","Content","Title","style","text","Chevron","centerComponent","containerStyle","length","h4","data","keyExtractor","toString","renderItem","title","name","type","placement","navigate"],"sources":["/Users/Felipe/Documents/app-vb/app-vb/src/screens/TaskListScreen.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  FlatList,\n  SafeAreaView,\n  View,\n} from 'react-native';\nimport {\n  Header,\n  ListItem,\n  CheckBox,\n  FAB,\n  Icon,\n  Text,\n} from 'react-native-elements';\nimport { TaskListScreenProps, Task } from '../types';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n  },\n  header: {\n    backgroundColor: 'rgb(0, 122, 255)',\n    paddingVertical: 20,\n    paddingHorizontal: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgb(242, 242, 242)',\n  },\n  headerTitle: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  emptyView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  noTasksText: {\n    color: '#888',\n  },\n  taskText: {\n    color: '#333',\n  },\n  taskTextCompleted: {\n    textDecorationLine: 'line-through',\n    color: '#aaa',\n    fontStyle: 'italic',\n  },\n});\n\nconst TaskListScreen: React.FC<TaskListScreenProps> = ({ navigation, tasks, setTasks }) => {\n  const toggleTaskCompletion = (id: number) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  const renderTaskItem = ({ item }: { item: Task }) => (\n    <ListItem bottomDivider onPress={() => toggleTaskCompletion(item.id)}>\n      <CheckBox\n        checked={item.completed}\n        onPress={() => toggleTaskCompletion(item.id)}\n        iconType=\"material-community\"\n        checkedIcon=\"checkbox-marked-circle\"\n        uncheckedIcon=\"checkbox-blank-circle-outline\"\n      />\n      <ListItem.Content>\n        <ListItem.Title style={item.completed ? styles.taskTextCompleted : styles.taskText}>\n          {item.text}\n        </ListItem.Title>\n      </ListItem.Content>\n      <ListItem.Chevron />\n    </ListItem>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Header\n        centerComponent={{ text: 'Minhas Tarefas', style: styles.headerTitle }}\n        containerStyle={styles.header}\n      />\n\n      {tasks.length === 0 ? (\n        <View style={styles.emptyView}>\n          <Text h4 style={styles.noTasksText}>\n            Nenhuma tarefa adicionada!\n          </Text>\n        </View>\n      ) : (\n        <FlatList\n          data={tasks}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={renderTaskItem}\n        />\n      )}\n\n      <FAB\n        title={<Icon name=\"add\" type=\"material\" color=\"white\" />}\n        placement=\"right\"\n        color=\"#6200ee\"\n        onPress={() => navigation.navigate('AddTask')}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default TaskListScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}